#!/bin/bash

# üóÑÔ∏è Setup SQL Server Database for Hazelcast
# Executa o script de cria√ß√£o das tabelas

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
CYAN='\033[0;36m'
WHITE='\033[1;37m'
NC='\033[0m' # No Color

# Par√¢metros padr√£o
SERVER_NAME="${1:-localhost}"
DATABASE_NAME="${2:-hazelcast_db}"
USERNAME="${3:-sa}"
PASSWORD="${4:-}"

echo -e "${GREEN}üóÑÔ∏è  Setup SQL Server Database for Hazelcast${NC}"
echo -e "${GREEN}=============================================${NC}"

# Verificar se o arquivo SQL existe
SQL_FILE="$(dirname "$0")/sql-server-schema.sql"
if [ ! -f "$SQL_FILE" ]; then
    echo -e "${RED}‚ùå Arquivo SQL n√£o encontrado: $SQL_FILE${NC}"
    exit 1
fi

# Solicitar senha se n√£o fornecida
if [ -z "$PASSWORD" ]; then
    echo -e "${YELLOW}üîê Digite a senha do SQL Server:${NC}"
    read -s PASSWORD
fi

echo -e "${CYAN}üìä Configura√ß√£o:${NC}"
echo -e "${WHITE}   Server: $SERVER_NAME${NC}"
echo -e "${WHITE}   Database: $DATABASE_NAME${NC}"
echo -e "${WHITE}   Username: $USERNAME${NC}"
echo ""

# Verificar se sqlcmd est√° instalado
if ! command -v sqlcmd &> /dev/null; then
    echo -e "${RED}‚ùå sqlcmd n√£o encontrado!${NC}"
    echo -e "${YELLOW}üí° Instale o SQL Server command line tools:${NC}"
    echo -e "${WHITE}   Ubuntu/Debian: apt-get install mssql-tools${NC}"
    echo -e "${WHITE}   RHEL/CentOS: yum install mssql-tools${NC}"
    echo -e "${WHITE}   macOS: brew install mssql-tools${NC}"
    echo -e "${WHITE}   Ou baixe de: https://docs.microsoft.com/en-us/sql/tools/sqlcmd-utility${NC}"
    exit 1
fi

echo -e "${YELLOW}üîó Testando conex√£o com SQL Server...${NC}"

# Testar conex√£o
TEST_QUERY="SELECT 1 as test"
if sqlcmd -S "$SERVER_NAME" -d "$DATABASE_NAME" -U "$USERNAME" -P "$PASSWORD" -Q "$TEST_QUERY" -h -1 -W > /dev/null 2>&1; then
    echo -e "${GREEN}‚úÖ Conex√£o com SQL Server estabelecida!${NC}"
else
    echo -e "${RED}‚ùå Erro na conex√£o com SQL Server${NC}"
    echo -e "${YELLOW}üí° Verifique:${NC}"
    echo -e "${WHITE}   - Se o SQL Server est√° rodando${NC}"
    echo -e "${WHITE}   - Se as credenciais est√£o corretas${NC}"
    echo -e "${WHITE}   - Se o database '$DATABASE_NAME' existe${NC}"
    echo -e "${WHITE}   - Se a conectividade de rede est√° OK${NC}"
    exit 1
fi

echo ""
echo -e "${YELLOW}üöÄ Executando script de cria√ß√£o do schema...${NC}"

# Executar script SQL
if sqlcmd -S "$SERVER_NAME" -d "$DATABASE_NAME" -U "$USERNAME" -P "$PASSWORD" -i "$SQL_FILE"; then
    echo -e "${GREEN}‚úÖ Script executado com sucesso!${NC}"
else
    echo -e "${RED}‚ùå Erro ao executar script SQL${NC}"
    exit 1
fi

echo ""
echo -e "${YELLOW}üîç Verificando tabelas criadas...${NC}"

# Verificar tabelas
TABLES_QUERY="
SELECT 
    TABLE_NAME as Tabela,
    (SELECT COUNT(*) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = t.TABLE_NAME) as Colunas
FROM INFORMATION_SCHEMA.TABLES t
WHERE TABLE_NAME IN ('users', 'user_events')
    AND TABLE_TYPE = 'BASE TABLE'
ORDER BY TABLE_NAME
"

echo -e "${GREEN}üìä Tabelas encontradas:${NC}"
sqlcmd -S "$SERVER_NAME" -d "$DATABASE_NAME" -U "$USERNAME" -P "$PASSWORD" -Q "$TABLES_QUERY" -h -1

echo ""
echo -e "${YELLOW}üîç Verificando dados inseridos...${NC}"

# Verificar dados
DATA_QUERY="
SELECT 'users' as tabela, COUNT(*) as total FROM users
UNION ALL
SELECT 'user_events' as tabela, COUNT(*) as total FROM user_events
"

echo -e "${GREEN}üìà Contagem de registros:${NC}"
sqlcmd -S "$SERVER_NAME" -d "$DATABASE_NAME" -U "$USERNAME" -P "$PASSWORD" -Q "$DATA_QUERY" -h -1

echo ""
echo -e "${GREEN}üéâ Setup do banco de dados conclu√≠do com sucesso!${NC}"
echo -e "${GREEN}‚úÖ Tabelas criadas: users, user_events${NC}"
echo -e "${GREEN}‚úÖ √çndices criados para performance${NC}"
echo -e "${GREEN}‚úÖ Dados de exemplo inseridos${NC}"
echo -e "${GREEN}üöÄ Pronto para usar com Hazelcast!${NC}"

echo ""
echo -e "${CYAN}üìù Pr√≥ximos passos:${NC}"
echo -e "${WHITE}   1. Configurar connection string no Azure DevOps pipeline${NC}"
echo -e "${WHITE}   2. Atualizar vari√°veis SQL_SERVER_* no pipeline${NC}"
echo -e "${WHITE}   3. Fazer deploy da aplica√ß√£o Hazelcast${NC}"
echo -e "${WHITE}   4. Verificar logs da aplica√ß√£o para confirmar conex√£o${NC}"

echo ""
echo -e "${CYAN}üîß Exemplo de uso:${NC}"
echo -e "${WHITE}   ./setup-sql-server.sh localhost hazelcast_db sa${NC}"
echo -e "${WHITE}   ./setup-sql-server.sh servidor.database.windows.net mydb admin${NC}"
