apiVersion: v1
kind: ServiceAccount
metadata:
  name: hazelcast-member
  namespace: hazelcast
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: hazelcast-discovery
  namespace: hazelcast
rules:
- apiGroups: [""]
  resources: ["endpoints", "pods", "services"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: hazelcast-discovery-binding
  namespace: hazelcast
subjects:
- kind: ServiceAccount
  name: hazelcast-member
  namespace: hazelcast
roleRef:
  kind: Role
  name: hazelcast-discovery
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: v1
kind: Service
metadata:
  name: hazelcast
  namespace: hazelcast
spec:
  selector:
    app: hazelcast
  ports:
  - name: hazelcast
    port: 5701
    targetPort: 5701
    protocol: TCP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hazelcast-member
  namespace: hazelcast
  labels:
    app: hazelcast
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hazelcast
  template:
    metadata:
      labels:
        app: hazelcast
    spec:
      serviceAccountName: hazelcast-member
      nodeSelector:
        kubernetes.io/arch: arm64
      containers:
      - name: hazelcast
        image: hazelcast/hazelcast:5.5
        ports:
        - containerPort: 5701
          name: hazelcast
        env:
        - name: HZ_CLUSTERNAME
          value: dev                        # use o MESMO nome que seu client/MC usam
        - name: HZ_NETWORK_JOIN_KUBERNETES_ENABLED
          value: "true"
        - name: HZ_NETWORK_JOIN_KUBERNETES_NAMESPACE
          value: hazelcast
        - name: HZ_NETWORK_JOIN_KUBERNETES_SERVICENAME
          value: hazelcast
        readinessProbe:
          tcpSocket: { port: 5701 }
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          tcpSocket: { port: 5701 }
          initialDelaySeconds: 15
          periodSeconds: 20
